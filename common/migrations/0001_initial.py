# Generated by Django 5.2.1 on 2025-05-30 07:39

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectBasicInfo',
            fields=[
                ('project_id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='项目编号')),
                ('project_name', models.CharField(max_length=100, verbose_name='项目名称')),
                ('delivery_date', models.DateField(verbose_name='发货日期')),
            ],
            options={
                'verbose_name': '项目基础信息',
                'verbose_name_plural': '项目基础信息',
            },
        ),
        migrations.CreateModel(
            name='customuser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('supervisor', '总管理员'), ('chargeman', '部门负责人')], default='chargeman', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectEquipmentSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=50, verbose_name='项目编号')),
                ('equipment_id', models.CharField(max_length=50, verbose_name='设备编号')),
                ('equipment_name', models.CharField(max_length=100, verbose_name='设备名称')),
                ('equipment_quantity', models.IntegerField(verbose_name='设备数量')),
                ('phase', models.CharField(max_length=50, verbose_name='阶段')),
                ('start_time', models.DateTimeField(verbose_name='开始时间')),
                ('end_time', models.DateTimeField(verbose_name='结束时间')),
            ],
            options={
                'verbose_name': '项目设备排程',
                'verbose_name_plural': '项目设备排程',
                'unique_together': {('project_id', 'equipment_id', 'phase')},
            },
        ),
        migrations.CreateModel(
            name='ScheduleHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=50, verbose_name='项目编号')),
                ('equipment_id', models.CharField(max_length=50, verbose_name='设备编号')),
                ('equipment_name', models.CharField(max_length=100, verbose_name='设备名称')),
                ('equipment_quantity', models.IntegerField(verbose_name='设备数量')),
                ('phase', models.CharField(max_length=50, verbose_name='阶段')),
                ('start_time', models.DateTimeField(verbose_name='开始时间')),
                ('end_time', models.DateTimeField(verbose_name='结束时间')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('processed_flag', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': '设备排程历史记录',
                'verbose_name_plural': '设备排程历史记录',
                'ordering': ['-modified_at'],
                'unique_together': {('project_id', 'equipment_id', 'phase', 'modified_at')},
            },
        ),
    ]
